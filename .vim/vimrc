vim9script
source $VIMRUNTIME/defaults.vim

set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set autoindent
set relativenumber number
set hidden # Allow buffer to be hidden without save change
set encoding=utf-8
set cursorline
set splitbelow # default split on the below
set splitright
set laststatus=2 # Always show status line
set backspace=2 # Ensure backspace working
set incsearch # Highlight search work on the fly
set linebreak
set virtualedit=block
set autoread

set wildmode=longest:full,full

set colorcolumn=81,121

# Display blank characters
set list
set listchars=tab:\|\ ,space:·,extends:>,precedes:<,leadmultispace:\|·,trail:~

# set cursor
&t_SI = "\<Esc>[6 q"
&t_SR = "\<Esc>[4 q"
&t_EI = "\<Esc>[2 q"
set ttimeoutlen=50

# <Leader> key
g:mapleader = " "

# disable mouse
set mouse=

set pastetoggle=<F11>

# vim-plug
call plug#begin('~/.local/share/vim-plug')
Plug 'editorconfig/editorconfig-vim'
Plug 'wakatime/vim-wakatime'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
# Plug 'tpope/vim-sleuth'
Plug 'haya14busa/incsearch.vim'
Plug 'justinmk/vim-sneak'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'NLKNguyen/papercolor-theme'
Plug 'alvan/vim-closetag'
Plug 'vifm/vifm.vim'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'OrkWard/lsp'
Plug 'girishji/vimcomplete'
Plug 'prettier/vim-prettier', { 'do': 'yarn install --frozen-lockfile --production' }


# highlight
Plug 'kylelaker/riscv.vim'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'neoclide/jsonc.vim'

# disable now
# Plug 'liuchengxu/vim-which-key'
# Plug 'neoclide/coc.nvim', { 'branch': 'release' }
Plug 'jiangmiao/auto-pairs'
call plug#end()

packadd comment

# ================================== theme =====================================
set background=light

def ColorschemeExists(name: string): bool
  return !empty(globpath(&rtp, 'colors/' .. name .. '.vim'))
enddef

if ColorschemeExists('PaperColor')
  colorscheme PaperColor
endif

# Only custom after colorscheme change
if $TERM =~# 'xterm-color\|.*-256color\|alacritty'
  highlight CocFloatDividingLine ctermfg=4
  highlight CocFloatActive ctermfg=4
  highlight ErrorMsg ctermfg=0
endif

# =================================== keymap ===================================
def g:SwitchListchars(): void
  if &list
    set nolist
  else
    set list
  endif
enddef

nnoremap <F12> :<C-u>call SwitchListchars()<CR>
vnoremap <F12> :<C-u>call SwitchListchars()<CR>gv

# some useful map
nnoremap Y y$
# nnoremap j gj
# nnoremap k gk

# Use arrow keys to scroll in popup window
def ScrollPopup(down: number): number
  var winids = popup_list()
  if empty(winids)
    return 0
  else
    let winid = winids[0]
  endif

  # if the popup window is hidden, then bypass the keystrokes
  var pp = popup_getpos(winid)
  if pp.visible != 1 | return 0 | endif

  var firstline = pp.firstline + a:down
  var buf_lastline = str2nr(trim(win_execute(winid, "echo line('$')")))
  if firstline < 1
    let firstline = 1
  elseif pp.lastline + a:down > buf_lastline
    let firstline = firstline - down + buf_lastline - pp.lastline
  endif

  # if a scrollbar is shown, then the height changes
  call popup_setoptions( winid, {'scrollbar': 0, 'resize': 0, 'fixed': 1, 'firstline' : firstline } )

  return 1
enddef

# auto pair
# inoremap {<CR> {<CR>}<ESC>O
# inoremap [<CR> [<CR>]<ESC>O

def EditFtplugin(after: bool)
  var filetype = &filetype

  if filetype == ''
    return
  endif

  var ftplugin_path = ''
  if after == true
    ftplugin_path = '~/.vim/after/ftplugin/' .. filetype .. '.vim'
  else
    ftplugin_path = '~/.vim/ftplugin/' .. filetype .. '.vim'
  endif

  execute 'edit ' .. ftplugin_path
enddef

command Ed call EditFtplugin(false)
command Eda call EditFtplugin(true)

command Opt edit ~/.vim/after/plugin/opts.vim
command Rc edit $MYVIMRC

# Emacs-keys
cnoremap <C-A> <Home>
cnoremap <C-B> <Left>
cnoremap <C-D> <Del>
cnoremap <C-E> <End>
cnoremap <C-F> <Right>
cnoremap <C-N> <Down>
cnoremap <C-P> <Up>
cnoremap <Esc>b <S-Left>
cnoremap <Esc>f <S-Right>

# =================================== gui ======================================
if has("gui_running")
  # disable toolbar
  set guioptions-=T
  set guifont=JetBrains\ Mono\ 20,JetBrainsMono-Regular:h14
endif
