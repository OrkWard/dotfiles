vim9script
source $VIMRUNTIME/defaults.vim

# ================================== option =====================================
set expandtab tabstop=2 shiftwidth=2 softtabstop=-1
set smartindent
set relativenumber number
set hidden
set encoding=utf-8
set splitbelow
set splitright
set laststatus=2 # Always show status line
set linebreak
set virtualedit=block
set autoread
set ttimeoutlen=50
set wildmode=longest:full,full
# set colorcolumn=121
set list
set listchars=tab:\|\ ,space:·,extends:>,precedes:<,leadmultispace:\|·,trail:~
set fillchars=vert:│,fold:-,eob:~,lastline:@

# vim-plug
call plug#begin('~/.local/share/vim-plug')
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-scriptease'
Plug 'haya14busa/incsearch.vim'
Plug 'justinmk/vim-sneak'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'sonph/onehalf', { 'rtp': 'vim/' }
Plug 'Yggdroot/LeaderF', { 'do': ':LeaderfInstallCExtension' }
Plug 'alvan/vim-closetag'
Plug 'sbdchd/neoformat'
Plug 'neoclide/jsonc.vim'
Plug 'skywind3000/asyncrun.vim'
call plug#end()

packadd! comment
packadd! editorconfig

# ================================== theme =====================================
colorscheme onehalflight
highlight Visual cterm=NONE ctermfg=NONE ctermbg=153 guifg=NONE
highlight SpecialKey cterm=nocombine ctermfg=252 guifg=#d7d7d7
highlight VertSplit cterm=NONE ctermfg=255 ctermbg=NONE guifg=#f0f0f0 guibg=NONE
augroup MyTheme
  autocmd!
  autocmd BufNewFile,BufRead * call matchadd('SpecialKey', '\s\+')
  autocmd BufNewFile,BufRead * call matchadd('NonText', '\n\+')
augroup END

# ================================== function ==================================
# get current syntax highlight group under cursor
def g:SynGroup()
  var s = synID(line('.'), col('.'), 1)
  echo synIDattr(s, 'name') .. ' -> ' .. synIDattr(synIDtrans(s), 'name')
enddef

# Use arrow keys to scroll in popup window
def ScrollPopup(down: number): number
  var winids = popup_list()
  if empty(winids)
    return 0
  else
    let winid = winids[0]
  endif

  # if the popup window is hidden, then bypass the keystrokes
  var pp = popup_getpos(winid)
  if pp.visible != 1 | return 0 | endif

  var firstline = pp.firstline + a:down
  var buf_lastline = str2nr(trim(win_execute(winid, "echo line('$')")))
  if firstline < 1
    let firstline = 1
  elseif pp.lastline + a:down > buf_lastline
    let firstline = firstline - down + buf_lastline - pp.lastline
  endif

  # if a scrollbar is shown, then the height changes
  call popup_setoptions( winid, {'scrollbar': 0, 'resize': 0, 'fixed': 1, 'firstline' : firstline } )

  return 1
enddef

def EditFtplugin()
  var filetype = &filetype

  if filetype == ''
    return
  endif

  execute 'edit ~/.config/vim/after/ftplugin/' .. filetype .. '.vim'
enddef


# ================================== command ==================================
command GetCurrentSyntaxGroup call SynGroup()
command EditFiletype call EditFtplugin()
command EditPluginOption edit ~/.config/vim/after/plugin/plugin-options.vim
command EditRc edit $MYVIMRC
command PickMyPluginFile :LeaderfFile ~/.config/vim
command PickPluginFile :LeaderfFile ~/.local/share/vim-plug

# =================================== keymap ===================================
g:mapleader = " "

# some useful map
nnoremap Y y$
vnoremap > >gv
vnoremap < <gv

# Emacs-keys
cnoremap <C-A> <Home>
cnoremap <C-B> <Left>
cnoremap <C-D> <Del>
cnoremap <C-E> <End>
cnoremap <C-F> <Right>
cnoremap <C-N> <Down>
cnoremap <C-P> <Up>
cnoremap <Esc>b <S-Left>
cnoremap <Esc>f <S-Right>

inoremap <C-A> <Home>
inoremap <C-B> <Left>
inoremap <C-E> <End>
inoremap <C-F> <Right>
inoremap <C-N> <Down>
inoremap <C-P> <Up>

# For some mysteries reason, <ESC><BS> don't work properly in terminal
# First set it to <F13>, then map <F13> to <C-W>
# Unfortunately, there are still problems to solve in :term mode
if !has("gui_running")
  execute "set <F13>=\<Esc>" .. &t_kb
  cnoremap <F13> <C-W>
  inoremap <F13> <C-W>
endif

# =============================== autocommand ==================================
augroup MyGroup
  autocmd!
  autocmd BufWritePost ~/.config/vim/vimrc,~/.config/vim/*.vim :source %
augroup END

# =================================== term ======================================
if !has('gui_running') && &term =~ '^\%(screen\|tmux\)'
  # cursor style
  &t_SI = "\<Esc>[6 q"
  &t_SR = "\<Esc>[4 q"
  &t_EI = "\<Esc>[2 q"

  # Better mouse support, see  :help 'ttymouse'
  set ttymouse=sgr

  # true color
  &termguicolors = v:true

  # Enable bracketed paste mode, see  :help xterm-bracketed-paste
  &t_BE = "\<Esc>[?2004h"
  &t_BD = "\<Esc>[?2004l"
  &t_PS = "\<Esc>[200~"
  &t_PE = "\<Esc>[201~"

  # term focus events support, see :help xterm-focus-events
  &t_fe = "\<Esc>[?1004h"
  &t_fd = "\<Esc>[?1004l"
  execute "set <FocusGained>=\<Esc>[I"
  execute "set <FocusLost>=\<Esc>[O"

  # Enable modified arrow keys, see  :help arrow_modifiers
  execute "silent! set <xUp>=\<Esc>[@;*A"
  execute "silent! set <xDown>=\<Esc>[@;*B"
  execute "silent! set <xRight>=\<Esc>[@;*C"
  execute "silent! set <xLeft>=\<Esc>[@;*D"
endif

# =================================== gui ======================================
if has("gui_running")
  # disable toolbar
  set guioptions-=T
  set guifont=JetBrains\ Mono\ 20,JetBrainsMono-Regular:h14
endif

# vim: foldmethod=marker
