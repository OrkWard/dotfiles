#!/usr/bin/env python3
import os
import subprocess
import shutil
from pathlib import Path

def run_cmd(cmd, shell=True):
    try:
        subprocess.run(cmd, shell=shell, check=True)
        return True
    except subprocess.CalledProcessError:
        return False

def command_exists(cmd):
    return shutil.which(cmd) is not None

def main():
    os.chdir(Path.home())

    print("Init submodules")
    run_cmd("yadm submodule update --recursive --init")

    system_type = os.uname().sysname

    if system_type == "Darwin":
        if not command_exists("brew"):
            print("Install homebrew")
            run_cmd('/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"')

    if system_type == "Linux":
        if command_exists("pacman"):
            print("Update pacman")
            packages = [
                    "bash-completion", "base-devel", "difftastic", "gdb",
                    "tealdeer", "vim", "ripgrep", "gh", "vifm", "asdf",
                    "fzf", "tmux", "fd", "fish", "lsd", "direnv", "tmuxinator",
                    "atuin"
                    ]
            run_cmd(f"sudo pacman -Syu --noconfirm")
            run_cmd(f"sudo pacman -S {' '.join(packages)} --noconfirm")

    if command_exists("vim"):
        print("Install vim plugins")
        run_cmd("vim +PlugUpdate +qall")

    tpm_path = Path.home() / ".tmux/plugins/tpm"
    if not tpm_path.exists():
        print("Install tmux")
        run_cmd(f"git clone https://github.com/OrkWard/tpm {Path.home()}/.config/tmux/plugins/tpm")

if __name__ == "__main__":
    main()
