require("hs.ipc")
local inspect = require('inspect')

---------------- Appliction -----------------
-- hs.hotkey.bind({ "alt" }, "F1", function()
--     hs.application.launchOrFocus("Alacritty")
-- end)
--
-- hs.hotkey.bind({ "alt" }, "F2", function()
--     hs.application.launchOrFocus("Google Chrome")
-- end)
--
-- hs.hotkey.bind({ "alt" }, "F3", function()
--     hs.application.launchOrFocus("Zed")
-- end)
--
-- hs.hotkey.bind({ "alt" }, "4", function()
--     hs.application.launchOrFocus("Lark")
-- end)
--
-- hs.hotkey.bind({ "alt" }, "0", function()
--     hs.application.launchOrFocus("Telegram")
-- end)
--
-- hs.hotkey.bind({ "alt" }, "9", function()
--     hs.application.launchOrFocus("Proxyman")
-- end)
--
-- hs.hotkey.bind({ "alt" }, "8", function()
--     hs.application.launchOrFocus("Figma")
-- end)
--
-- hs.hotkey.bind({ "alt", "shift" }, "C", function()
--     hs.application.launchOrFocus("CotEditor")
-- end)
--
-- hs.hotkey.bind({ "alt", "shift" }, "E", function()
--     hs.application.launchOrFocus("Finder")
-- end)
--
-- hs.hotkey.bind({ "alt", "shift" }, "R", function()
--     hs.reload()
-- end)
-- hs.alert.show("Config Reload")
--

local inputSourceMap = {
    ["Alacritty"] = "ABC",
    ["Zed"] = "ABC",
    ["MacVim"] = "ABC",
    ["CotEditor"] = "微信输入法",
    ["飞书"] = "微信输入法",
}
local inputSourceType = {
  ["ABC"] = "layout",
  ["Hiragana"] = "method",
  ["微信输入法"] = "method"
}

local function startInputSourceSwitch()
  local appsToWatch = {}
  for k in pairs(inputSourceMap) do
    table.insert(appsToWatch, k)
  end

  hs.window.filter.new(appsToWatch):subscribe(hs.window.filter.windowFocused, function(_, name)
    local r = true
    local source = inputSourceMap[name]

    if inputSourceType[source] == "layout" then
      r = hs.keycodes.setLayout(source)
    elseif inputSourceType[source] == "method" then
      r = hs.keycodes.setMethod(source)
    else
      hs.alert.show(string.format('sourceName: %s is not layout or method', sourceName))
    end

    if not r then
      hs.alert.show(string.format('set %s to %s failure', appName, sourceName))
    end
  end)
end
startInputSourceSwitch()
